noSQL,只能三者选其二,经典CAP图
  C  强一致
一致性(Consistency)：任何一个读操作总是能读取到之前完成的写操作结果，也就是在分布式环境中，多点的数据是一致的;
  A  高可用
可用性(Availability)：每一个操作总是能够在确定的时间内返回，也就是系统随时都是可用的。
  P  分布容忍性
  分区容忍性(Partition Tolerance)： 在出现网络分区(比如断网)的情况下，分离的系统也能正常运行。

  分布式一定要实现分区容忍性P

  CA传统oracle数据库
  AP大多数网站架构的选择
  CP Redis/mongoDB


  数据库事物的一致性需求
  数据库的写实时性和读写实时性需求
  多表查询

  BASE : 基本可用
		 软状态
		 最终一致
最终一致性


remote dictionary Server  远程字典服务器



启动redis   redis-server  /etc/(配制文件)

redis -cli -p  6379  也可以直接redis-cli


set k1 hello
get hello 

shutdown  关掉

单进程
对读写等事件的响应是通过epoll的函数进行包装的

默认16个库
redis.conf  中设置的
切换所在库  select 7 切换到6号库,从0开始的


Dbsize 查看当前库的key的数量

keys  *  所在库的所有key展示

keys k?   所有k开头的key

FlushDB   清除当前库的所有keys

FlushAll  清除所有的库的keys

统一密码管理,16个库密码相同

Redis索引从0开始

默认端口6379


数据类型:
五大:
	1.String  单key单value,string可以包含任何数据,value最大是512M
	2.List   简单的字符串列表,按照插入顺序排序,可以添加一个元素导列表的头部或者尾部,底层实际是链表
	3.Hash  类似map   类似Map<String,Object>
	4.Set   string的无序集合,无重复
	5.Sort Set(Zset) 有序集合
	和Set相比,不同的是每个元素都会关联一个double类型的分数
	redis正式通过分数来为集合中的成员进行从小到大的排序,zset的成员是唯一的,但分数却可以重复















